# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

environment:
  global:
  # TODO This is the Rust channel that build jobs will use by default but can be
  # overridden on a case by case basis down below
    TARGET: x86_64-pc-windows-msvc

  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  matrix:
    # Current actual version
    - RUST_VERSION: nightly-2018-02-19

    # fresh nightly version
    - RUST_VERSION: nightly

matrix:
  allow_failures:
    - RUST_VERSION: nightly

install:
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %RUST_VERSION%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

# TODO This is the "test phase", tweak it as you see fit
test_script:
  - if [%RUST_VERSION%]==[nightly] (
       cargo update
     )
  - if [%APPVEYOR_REPO_TAG%]==[false] (
       cargo build --target %TARGET%
     )
#      cargo build --target %TARGET% &&
#      cargo build --target %TARGET% --release &&
#      cargo test --target %TARGET% &&
#      cargo test --target %TARGET% --release &&
#      cargo run --target %TARGET% &&
#      cargo run --target %TARGET% --release
#    )

before_deploy:
  # TODO Update this to build the artifacts that matter to you
  - cargo build --release
  - copy target\release\citybound.exe citybound.exe
  - dir
  - appveyor PushArtifact citybound.exe

deploy:
  artifact: citybound.exe
  # TODO update `auth_token.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it. Go to https://ci.appveyor.com/tools/encrypt
  # - Paste the output down here
  auth_token:
    secure: zHOyV+mp9WpJrigJh0wbSdb+85dUgEhFhOLa5WzDg8q3b0hjXB9RdfTjnILMqQaG
  description: ''
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    appveyor_repo_tag: true
  provider: GitHub

cache:
  - C:\Users\appveyor\.cargo\registry
  - target

branches:
  only:
    # Release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

# disable automatic builds
build: false
